{"version":3,"sources":["images/profile-selfie.jpg","images/survey-form.png","images/technical-documentation-page.png","images/product-landing-page.png","images/markdown-previewer.png","images/javascript-calculator.png","images/pomodoro-clock.png","images/bar-chart.png","images/exercise-tracker.png","images/file-metadata.png","images/metric-imp-converter.png","images/analog-clock.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","window","onscroll","header","document","querySelector","scrollY","classList","add","remove","App","className","href","id","src","profileSelfie","alt","surveyForm","technicalDocumentationPage","productLandingPage","markdownPreviewer","javascriptCalculator","pomodoroClock","barChart","exerciseTracker","fileMetadata","metricImpConverter","analogClock","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3e8690b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile-selfie.c12ac6cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/survey-form.eb1d3bab.png\";","module.exports = __webpack_public_path__ + \"static/media/technical-documentation-page.47e9ecdd.png\";","module.exports = __webpack_public_path__ + \"static/media/product-landing-page.fac3d9db.png\";","module.exports = __webpack_public_path__ + \"static/media/markdown-previewer.2e20f747.png\";","module.exports = __webpack_public_path__ + \"static/media/javascript-calculator.15fde892.png\";","module.exports = __webpack_public_path__ + \"static/media/pomodoro-clock.c4c993c1.png\";","module.exports = __webpack_public_path__ + \"static/media/bar-chart.3e96157e.png\";","module.exports = __webpack_public_path__ + \"static/media/exercise-tracker.ae465698.png\";","module.exports = __webpack_public_path__ + \"static/media/file-metadata.093f8f65.png\";","module.exports = __webpack_public_path__ + \"static/media/metric-imp-converter.e044f6e8.png\";","module.exports = __webpack_public_path__ + \"static/media/analog-clock.b05da268.png\";","import React from 'react';\r\nimport './App.scss';\r\nimport profileSelfie from './images/profile-selfie.jpg';\r\nimport surveyForm from './images/survey-form.png';\r\nimport technicalDocumentationPage from './images/technical-documentation-page.png';\r\nimport productLandingPage from './images/product-landing-page.png';\r\nimport markdownPreviewer from './images/markdown-previewer.png';\r\nimport javascriptCalculator from './images/javascript-calculator.png';\r\nimport pomodoroClock from './images/pomodoro-clock.png';\r\nimport barChart from './images/bar-chart.png';\r\nimport exerciseTracker from './images/exercise-tracker.png';\r\nimport fileMetadata from './images/file-metadata.png';\r\nimport metricImpConverter from './images/metric-imp-converter.png';\r\nimport analogClock from './images/analog-clock.png';\r\n\r\nwindow.onscroll = () => {\r\n  const header = document.querySelector('header');\r\n  if (window.scrollY > 0) {\r\n    header.classList.add('header--shadow');\r\n  } else {\r\n    header.classList.remove('header--shadow');\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n      <div>\r\n        <header>\r\n          <nav className=\"navbar\">\r\n            <ul className=\"menu\">\r\n              <li><a href={\"#home\"}>Home</a></li>\r\n              <li><a href={\"#projects\"}>Projects</a></li>\r\n              <li><a href={\"#profiles\"}>Profiles</a></li>\r\n            </ul>\r\n          </nav>\r\n        </header>\r\n        <main>\r\n          <section id=\"home\">\r\n            <div className=\"title\">\r\n              <img src={profileSelfie} alt=\"profile selfie\"/>\r\n              <h1>Jonathan Howard</h1>\r\n              <p>Software Developer</p>\r\n            </div>\r\n          </section>\r\n          <section id=\"projects\">\r\n            <h2 className=\"section-header\">Projects</h2>\r\n            <div className=\"project\">\r\n              <a href=\"https://jonathanhhoward.github.io/survey-form\">\r\n                <figure className=\"tile float\">\r\n                  <img src={surveyForm}\r\n                       alt=\"icon for survey-form\"/>\r\n                  <figcaption className=\"caption\">\r\n                    Survey Form\r\n                  </figcaption>\r\n                </figure>\r\n              </a>\r\n              <a href=\"https://jonathanhhoward.github.io/technical-documentation-page\">\r\n                <figure className=\"tile\">\r\n                  <img src={technicalDocumentationPage}\r\n                       alt=\"icon for technical-documentation-page\"/>\r\n                  <figcaption className=\"caption\">\r\n                    Technical Document Page\r\n                  </figcaption>\r\n                </figure>\r\n              </a>\r\n              <a href=\"https://jonathanhhoward.github.io/product-landing-page/\">\r\n                <figure className=\"tile\">\r\n                  <img src={productLandingPage}\r\n                       alt=\"icon for product-landing-page\"/>\r\n                  <figcaption className=\"caption\">\r\n                    Product Landing Page\r\n                  </figcaption>\r\n                </figure>\r\n              </a>\r\n              <a href=\"https://jonathanhhoward.github.io/markdown-previewer\">\r\n                <figure className=\"tile\">\r\n                  <img src={markdownPreviewer}\r\n                       alt=\"icon for markdown-previewer\"/>\r\n                  <figcaption className=\"caption\">\r\n                    Markdown Previewer\r\n                  </figcaption>\r\n                </figure>\r\n              </a>\r\n              <a href=\"https://jonathanhhoward.github.io/javascript-calculator\">\r\n                <figure className=\"tile\">\r\n                  <img src={javascriptCalculator}\r\n                       alt=\"icon for javascript-calculator\"/>\r\n                  <figcaption className=\"caption\">\r\n                    JavaScript Calculator\r\n                  </figcaption>\r\n                </figure>\r\n              </a>\r\n              <a href=\"https://jonathanhhoward.github.io/pomodoro-clock\">\r\n                <figure className=\"tile\">\r\n                  <img src={pomodoroClock}\r\n                       alt=\"icon for pomodoro-clock\"/>\r\n                  <figcaption className=\"caption\">\r\n                    Pomodoro Clock\r\n                  </figcaption>\r\n                </figure>\r\n              </a>\r\n              <a href=\"https://jonathanhhoward.github.io/bar-chart\">\r\n                <figure className=\"tile\">\r\n                  <img src={barChart}\r\n                       alt=\"icon for bar-chart\"/>\r\n                  <figcaption className=\"caption\">\r\n                    Bar Chart\r\n                  </figcaption>\r\n                </figure>\r\n              </a>\r\n              <a href=\"https://jhhoward-exercisetracker.glitch.me\">\r\n                <figure className=\"tile\">\r\n                  <img src={exerciseTracker}\r\n                       alt=\"icon for exercise-tracker\"/>\r\n                  <figcaption className=\"caption\">\r\n                    Exercise Tracker\r\n                  </figcaption>\r\n                </figure>\r\n              </a>\r\n              <a href=\"https://jhhoward-filemetadata.glitch.me\">\r\n                <figure className=\"tile\">\r\n                  <img src={fileMetadata}\r\n                       alt=\"icon for file-metadata\"/>\r\n                  <figcaption className=\"caption\">\r\n                    File Metadata Microservice\r\n                  </figcaption>\r\n                </figure>\r\n              </a>\r\n              <a href=\"https://jhhoward-metricimpconverter.glitch.me\">\r\n                <figure className=\"tile\">\r\n                  <img src={metricImpConverter}\r\n                       alt=\"icon for metric-imp-converter\"/>\r\n                  <figcaption className=\"caption\">\r\n                    Metric-Imperial Converter\r\n                  </figcaption>\r\n                </figure>\r\n              </a>\r\n              <a href=\"https://github.com/jonathanhhoward/clock\">\r\n                <figure className=\"tile\">\r\n                  <img src={analogClock}\r\n                       alt=\"icon for analog-clock\"/>\r\n                  <figcaption className=\"caption\">\r\n                    Analog Clock\r\n                  </figcaption>\r\n                </figure>\r\n              </a>\r\n            </div>\r\n          </section>\r\n          <section id=\"profiles\">\r\n            <div className=\"profile\">\r\n              <h2 className=\"section-header\">Profiles</h2>\r\n              <div className=\"profile\">\r\n                <a href=\"https://github.com/jonathanhhoward\"\r\n                   className=\"button\">\r\n                  GitHub\r\n                </a>\r\n                <a href=\"https://www.freecodecamp.org/jonathanhoward\"\r\n                   className=\"button\">\r\n                  freeCodeCamp\r\n                </a>\r\n                <a href=\"https://linkedin.com/in/jonathanhhoward\"\r\n                   className=\"button\">\r\n                  LinkedIn\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </main>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}